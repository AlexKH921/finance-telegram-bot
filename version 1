import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.HashMap;
import java.util.Map;

public class FinanceBot extends TelegramLongPollingBot {
    private Map<Long, Double> incomes;
    private Map<Long, Double> expenses;

    public FinanceBot() {
        incomes = new HashMap<>();
        expenses = new HashMap<>();
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            if (messageText.startsWith("/income")) {
                double amount = parseAmount(messageText);
                addIncome(chatId, amount);
                sendMessage(chatId, "Income added: " + amount);
            } else if (messageText.startsWith("/expense")) {
                double amount = parseAmount(messageText);
                addExpense(chatId, amount);
                sendMessage(chatId, "Expense added: " + amount);
            } else if (messageText.startsWith("/savings")) {
                double totalIncome = getTotal(incomes);
                double totalExpense = getTotal(expenses);
                double savings = totalIncome - totalExpense;
                sendMessage(chatId, "Total savings: " + savings);
            }
        }
    }

    private double parseAmount(String message) {
        // Реализуйте код для извлечения числового значения из сообщения
        // Например, можно использовать регулярные выражения или другие методы парсинга
        // Верните значение дохода или расхода в виде double
    }

    private void addIncome(long chatId, double amount) {
        incomes.put(chatId, incomes.getOrDefault(chatId, 0.0) + amount);
    }

    private void addExpense(long chatId, double amount) {
        expenses.put(chatId, expenses.getOrDefault(chatId, 0.0) + amount);
    }

    private double getTotal(Map<Long, Double> map) {
        double total = 0.0;
        for (double value : map.values()) {
            total += value;
        }
        return total;
    }

    private void sendMessage(long chatId, String text) {
        SendMessage message = new SendMessage()
                .setChatId(chatId)
                .setText(text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return "YourBotUsername";
    }

    @Override
    public String getBotToken() {
        return "YourBotToken";
    }
}
